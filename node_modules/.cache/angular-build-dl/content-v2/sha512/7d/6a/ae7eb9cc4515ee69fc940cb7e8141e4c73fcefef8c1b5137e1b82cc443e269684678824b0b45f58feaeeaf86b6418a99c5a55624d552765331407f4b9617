{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/components/admin-dashboard/admin-dashboard.component.ts","./src/app/components/admin-dashboard/admin-dashboard.component.html","./src/app/components/admin-event/admin-event.component.ts","./src/app/components/admin-event/admin-event.component.html","./src/app/components/event/event.component.ts","./src/app/components/event/event.component.html","./src/app/components/events/events.component.ts","./src/app/components/events/events.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/live-event/live-event.component.ts","./src/app/components/live-event/live-event.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/page-not-found/page-not-found.component.ts","./src/app/components/page-not-found/page-not-found.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/registration/registration.component.ts","./src/app/components/registration/registration.component.html","./src/app/components/rute-planner/rute-planner.component.ts","./src/app/components/rute-planner/rute-planner.component.html","./src/app/components/user-dashboard/user-dashboard.component.ts","./src/app/components/user-dashboard/user-dashboard.component.html","./src/app/guards/auth.guard.ts","./src/app/models/Event.ts","./src/app/models/check-point.ts","./src/app/models/event-sign-up.ts","./src/app/models/event.ts","./src/app/models/participant.ts","./src/app/models/race-point.ts","./src/app/models/ship.ts","./src/app/models/user.ts","./src/app/services/event-registration.service.ts","./src/app/services/event.service.ts","./src/app/services/location-registration.service.ts","./src/app/services/race-point.service.ts","./src/app/services/ship.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { EventsComponent } from './components/events/events.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { EventComponent } from './components/event/event.component';\r\nimport { UserDashboardComponent } from './components/user-dashboard/user-dashboard.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { AdminDashboardComponent } from './components/admin-dashboard/admin-dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AdminEventComponent } from './components/admin-event/admin-event.component';\r\nimport { RutePlannerComponent } from './components/rute-planner/rute-planner.component';\r\nimport { LiveEventComponent } from './components/live-event/live-event.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'hjem', component: HomeComponent },\r\n  { path: 'events', component: EventsComponent },\r\n  { path: 'omos', component: AboutComponent },\r\n  { path: 'tilmelding', component: RegistrationComponent },\r\n  { path: 'logind', component: LoginComponent },\r\n  { path: 'mineEvents', component: UserDashboardComponent, canActivate: [AuthGuard], data: {expectedRole: 'user' }},\r\n  { path: 'administrerEvents', component: AdminDashboardComponent, canActivate: [AuthGuard], data: {expectedRole: 'admin' }},\r\n  { path: 'events/:eventId/:name', component: EventComponent },\r\n  { path: 'events/:eventId/:name/live', component: LiveEventComponent},\r\n  { path: 'profil', component: ProfileComponent, canActivate: [AuthGuard], data: { expectedRole: 'user' }},\r\n  { path: 'administrerEvent/:eventId/:name', component: AdminEventComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' }},\r\n  { path: 'administrerEvent/:eventId/:name/ruteplanner', component: RutePlannerComponent, canActivate: [AuthGuard], data: { expectedRole: 'admin' }},\r\n  { path: '', redirectTo:'/hjem', pathMatch: 'full' },\r\n  { path: '**', component: PageNotFoundComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { User } from './models/user';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  title = 'Tregatta';\r\n  public user: User;\r\n  public open: boolean;\r\n\r\n  constructor(private cookieService: CookieService, private router: Router) {\r\n    this.open = true;\r\n    this.updateUser();\r\n  }\r\n\r\n  /**\r\n   * Updates the user to the user saved in cookies\r\n   */\r\n  public updateUser() {\r\n    if (this.cookieService.check('user'))\r\n      this.user = JSON.parse(this.cookieService.get('user'));\r\n    else\r\n      this.user = null;\r\n  }\r\n\r\n  /**\r\n   * Event handler for the dropdown button\r\n   */\r\n  dropDownClicked() {\r\n    if (this.open)\r\n      this.open = false;\r\n    else\r\n      this.open = true;\r\n  }\r\n\r\n  /**\r\n   * Deletes the user from cookies and sets the user to null\r\n   */\r\n  LogOut() {\r\n    this.cookieService.deleteAll('user');\r\n    this.user = null;\r\n    this.router.navigateByUrl('/hjem');\r\n  }\r\n\r\n  /**\r\n   * Navigates to a specific path depending on the saved user information\r\n   */\r\n  registrationClicked() {\r\n    if (this.cookieService.check('user')) {\r\n      let user = JSON.parse(this.cookieService.get('user'));\r\n      if (user.role === 'admin')\r\n        this.router.navigateByUrl('/administrerEvents');\r\n      else\r\n        this.router.navigateByUrl('/mineEvents');\r\n    }\r\n    else\r\n      this.router.navigateByUrl('/tilmelding');\r\n  }\r\n}\r\n","<!-- Navigationbar -->\r\n<nav class=\"navbar navbar-expand-lg navbar-light bg-light sticky-top shadow\" style=\"background-color: #e3f2fd;\">\r\n  <div class=\"container\">\r\n    <a class=\"navbar-brand\" routerLink=\"/hjem\" routerLinkActive=\"active\">\r\n      <img src=\"../assets/images/logoTrans.png\" alt=\"\" width=\"170\" height=\"55\">\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\r\n      aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\"></div>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/events\" routerLinkActive=\"active\">Events</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" (click)=\"registrationClicked()\">Tilmelding</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" routerLink=\"/omos\" routerLinkActive=\"active\">Om os</a>\r\n        </li>\r\n      </ul>\r\n      <div *ngIf=\"!user\">\r\n        <button class=\"btn btn-outline-info my-2 my-sm-0 btn-sm\" routerLink=\"/logind\">Log ind</button>\r\n      </div>\r\n      <div *ngIf=\"user\">\r\n        <div class=\"d-inline-block\" ngbDropdown #myDrop=\"ngbDropdown\">\r\n          <button class=\"btn btn-outline-info mr-2\" id=\"dropdownManual\" ngbDropdownAnchor\r\n            (focus)=\"myDrop.open()\">{{user.firstname}}</button>\r\n          <div *ngIf=\"user.role === 'user'\" ngbDropdownMenu aria-labelledby=\"dropdownManual\">\r\n            <button ngbDropdownItem routerLink=\"/mineEvents\">Mine Events</button>\r\n            <button ngbDropdownItem routerLink=\"/profil\">Profil</button>\r\n            <button ngbDropdownItem (click)=\"LogOut()\">Log ud</button>\r\n          </div>\r\n          <div *ngIf=\"user.role === 'admin'\" ngbDropdownMenu aria-labelledby=\"dropdownManual\">\r\n            <button ngbDropdownItem routerLink=\"/administrerEvents\">Administrer Events</button>\r\n            <button ngbDropdownItem routerLink=\"/profil\">Profil</button>\r\n            <button ngbDropdownItem (click)=\"LogOut()\">Log ud</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n<!-- Footer -->\r\n<footer id=\"footer\" class=\"bg-light\">\r\n  <div class=\"container bg-light\">\r\n    <div class=\"container bg-light\">\r\n      <h4 class=\"text-center text-uppercase pt-3\">Kontakt os</h4>\r\n      <p class=\"text-center w-75 m-auto\">Åbningstider: Man-Fre: 09-16, Lør: 10-14</p>\r\n      <div class=\"row bg-light\">\r\n        <div class=\" col-lg-4 my-2 bg-light\">\r\n          <div class=\"card border-0 bg-light\">\r\n            <div class=\"card-body text-center bg-light\">\r\n              <i class=\"fa fa-phone fa-2x mb-2\" aria-hidden=\"true\"></i>\r\n              <h6 class=\"text-uppercase mb-3\">Telefon</h6>\r\n              <p>+45 75252627</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-4 my-2\">\r\n          <div class=\"card border-0 bg-light\">\r\n            <div class=\"card-body text-center\">\r\n              <i class=\"fa fa-map-marker fa-2x mb-2\" aria-hidden=\"true\"></i>\r\n              <h6 class=\"text-uppercase mb-3\">Kontor</h6>\r\n              <address>Ellegårvej 3, 6400 Sønderborg</address>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-4 my-2\">\r\n          <div class=\"card border-0 bg-light\">\r\n            <div class=\"card-body text-center\">\r\n              <i class=\"fa fa-globe fa-2x mb-2\" aria-hidden=\"true\"></i>\r\n              <h6 class=\"text-uppercase mb-3\">email</h6>\r\n              <p>info@tregatta.com</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-xs-12 col-sm-12 col-md-12 mt-2 mt-sm-1\">\r\n        <ul class=\"list-unstyled list-inline social text-center\">\r\n          <!--Facebook-->\r\n          <a class=\"fb-ic mr-3 ml-4\" role=\"button\"><i class=\"fab fa-lg fa-facebook-f\"></i></a>\r\n          <!--Twitter-->\r\n          <a class=\"tw-ic mr-3 ml-3\" role=\"button\"><i class=\"fab fa-lg fa-twitter\"></i></a>\r\n          <!--Instagram-->\r\n          <a class=\"ins-ic mr-3 ml-3\" role=\"button\"><i class=\"fab fa-lg fa-instagram\"></i></a>\r\n          <!--Linkedin-->\r\n          <a class=\"li-ic mr-3 ml-3\" role=\"button\"><i class=\"fab fa-lg fa-linkedin-in\"></i></a>\r\n          <!--Google +-->\r\n          <a class=\"gplus-ic mr-3 ml-3\" role=\"button\"><i class=\"fab fa-lg fa-google-plus-g\"></i></a>\r\n        </ul>\r\n      </div>\r\n      <hr>\r\n    </div>\r\n  </div>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { RegistrationComponent } from './components/registration/registration.component';\r\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\r\nimport { EventsComponent } from './components/events/events.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { EventComponent } from './components/event/event.component';\r\nimport { ValidateEqualModule } from 'ng-validate-equal';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { UserDashboardComponent } from './components/user-dashboard/user-dashboard.component';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { AdminDashboardComponent } from './components/admin-dashboard/admin-dashboard.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { AdminEventComponent } from './components/admin-event/admin-event.component';\r\nimport { RutePlannerComponent } from './components/rute-planner/rute-planner.component';\nimport { LiveEventComponent } from './components/live-event/live-event.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    AboutComponent,\r\n    RegistrationComponent,\r\n    PageNotFoundComponent,\r\n    EventsComponent,\r\n    LoginComponent,\r\n    EventComponent,\r\n    UserDashboardComponent,\r\n    AdminDashboardComponent,\r\n    ProfileComponent,\r\n    AdminEventComponent,\r\n    RutePlannerComponent,\r\n    LiveEventComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ValidateEqualModule,\r\n    NgbModule\r\n  ],\r\n  providers: [AuthGuard, CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div id=\"image\">\r\n    <div class=\"container h-100\">\r\n        <div class=\"row h-100 align-items-end pb-4\">\r\n            <div class=\"image-text col-3 text-start\">\r\n                <h1 class=\"font-weight-normal text-white\">Om os</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<section id=\"mainSection\" class=\"container pt-5 pb-5\">\r\n    <div class=\"columns\">\r\n        <div class=\"row\">\r\n            <article class=\"text-center col-md-6 my-2\">\r\n                <h2 class=\"font-weight-light\">Mission</h2>\r\n                <p><strong class=\"text-muted\">Gør svær at følge-sport interessant med GPS-sporing i realtid</strong></p>\r\n                <p>Vi giver synligheden til sporten, engagerer tilskuerne og driver fanbasis og sponsorværdi ved at afsløre og visualisere øjeblikke af svære at følge-sport i realtid</p>\r\n            </article>\r\n            <article class=\"text-center col-md-6 my-2 \">\r\n                <h2 class=\"font-weight-light\">Om os</h2>\r\n                <p>Tregatta blev grundlagt i 2020 og ejes og drives af stifterne. Vi kommer alle fra en lang baggrund i sport som elite atleter eller trænere og bygger på en stærk lidenskab for at vise vores sport for verden og leverer spændingen, forståelsen og de vigtigste øjeblikke af sportsgrene, der ellers er svære at følge.</p>\r\n            </article>\r\n        </div>\r\n    </div>\r\n</section>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { Event } from 'src/app/models/Event';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { startWith, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.css']\r\n})\r\n\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  events: Observable<Event[]>;\r\n  filter: FormControl;\r\n  filter$: Observable<string>;\r\n  filteredEvents: Observable<Event[]>;\r\n\r\n  model = new Event();\r\n\r\n  constructor(private eventService: EventService) {\r\n    this.setEvents();\r\n  }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  /**\r\n   * Gets all events from the backend and sets the search filter\r\n   */\r\n  setEvents() {\r\n    this.events = this.eventService.getEvents();\r\n    this.filter = new FormControl('');\r\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\r\n\r\n    this.filteredEvents = combineLatest(this.events, this.filter$)\r\n      .pipe(map(([events, filterString]) => events.filter(event => event.name.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 || event.city.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\r\n  }\r\n\r\n  /**\r\n   * Event handler for submitting a new event\r\n   * @param form \r\n   */\r\n  OnSubmit(form: NgForm) {\r\n    this.eventService.AddEvent(this.model).pipe()\r\n      .subscribe(eventReg => {\r\n        this.setEvents();\r\n        form.reset();\r\n      },\r\n        error => {\r\n          console.log(error.status);\r\n        });\r\n  }\r\n}\r\n","<div id=\"image\">\r\n    <div class=\"container h-100 align-items-start\">\r\n        <div class=\"row h-100 align-items-end pb-4\">\r\n            <div class=\" col-lg text-start\">\r\n                <h1 class=\"image-text font-weight-normal text-white pb-2 pl-3 pr-3\">Administrer Events</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n\r\n    <!-- List of events -->\r\n    <section class=\"eventList pt-4 col-lg-6\">\r\n        <div class=\"container\" *ngFor=\"let event of filteredEvents | async\">\r\n            <div class=\"event row p-1 pb-3\">\r\n                <div class=\"pt-2\">\r\n                    <img id=\"eventIcon\" src=\"../../../assets/images/pin.png\">\r\n                </div>\r\n                <div class=\"col-sm\">\r\n                    <a id=\"eventLink\" class=\"btn btn-link\"\r\n                        [routerLink]=\"['/administrerEvent', event.eventId, event.name]\" routerLinkActive=\"active\">\r\n                        <h4 class=\"pt-1\">{{event.name}}</h4>\r\n                    </a>\r\n                    <div id=\"date\" class=\"row pl-3\">\r\n                        <label>{{event.eventStart | date}} - {{event.eventEnd | date}}</label>\r\n                    </div>\r\n                    <div id=\"city\" class=\"row pl-3\">\r\n                        <label>{{event.city}}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n    <!-- Right side menu -->\r\n    <div id=\"rightMenu\" class=\"col\">\r\n        <form class=\"form-inline p-3 pt-4\">\r\n            <input class=\"form-control mr-sm-2 form-control-sm\" type=\"search\" placeholder=\"Søg efter event\"\r\n                [formControl]=\"filter\" aria-label=\"Søg\">\r\n            <button class=\"btn btn-outline-info my-2 my-sm-0 btn-sm\" type=\"submit\">Søg</button>\r\n        </form>\r\n\r\n        <!-- Event form -->\r\n        <div class=\"container justify-content-center col-sm-9 mt-5\">\r\n            <form id=\"addEvent\" class=\"p-3 pt-4 justify-content-center\" #AddEventForm=\"ngForm\"\r\n                (ngSubmit)=\"OnSubmit(AddEventForm)\">\r\n                <div class=\"row justify-content-center pb-3\">\r\n                    <h3 class=\"font-weight-normal\">Tilføj event her</h3>\r\n                </div>\r\n                <div class=\"row justify-content-center pb-2\">\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Event navn\" required\r\n                            [(ngModel)]=\"model.name\" #eventName=\"ngModel\" name=\"eventName\">\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"By\" required\r\n                            [(ngModel)]=\"model.city\" #city=\"ngModel\" name=\"city\">\r\n                    </div>\r\n                </div>\r\n                <div id=\"dates\" class=\"row justify-content-center\">\r\n                    <div class=\"col-xs pl-3 \">\r\n                        <p class=\"pt-1\">Start dato: </p>\r\n                    </div>\r\n                    <div class=\"col-md-5 p-0 pl-2\">\r\n                        <input class=\"date font-weight-light form-control font-size-l\" type=\"date\" #eventStart=\"ngModel\"\r\n                            name=\"eventStart\" placeholder=\"Start dato\" [(ngModel)]=\"model.eventStart\" required>\r\n                    </div>\r\n                    <div class=\"col-sm\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Start tidspunkt\"\r\n                            [(ngModel)]=\"model.eventStartTime\" required #eventStartTime=\"ngModel\" name=\"eventStartTime\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row justify-content-center\">\r\n                    <div class=\"col-xs pl-3 pr-1\">\r\n                        <p class=\"pt-1\">Slut dato: </p>\r\n                    </div>\r\n                    <div class=\"col-md-5 p-0 pl-2\">\r\n                        <input class=\"date font-weight-light form-control font-size-l\" type=\"date\" #eventEnd=\"ngModel\"\r\n                            name=\"eventEnd\" placeholder=\"Slut dato\" [(ngModel)]=\"model.eventEnd\" required>\r\n                    </div>\r\n                    <div class=\"col-sm\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Slut tidspunkt\"\r\n                            [(ngModel)]=\"model.eventEndTime\" required #eventEndTime=\"ngModel\" name=\"eventEndTime\">\r\n                    </div>\r\n\r\n                </div>\r\n                <div class=\"row justify-content-center pr-3\">\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Eventkode\" required\r\n                            [(ngModel)]=\"model.eventCode\" #eventCode=\"ngModel\" name=\"eventCode\">\r\n                    </div>\r\n                    <button class=\"btn btn-info my-sm-0 btn-sm \" type=\"submit\"\r\n                        [disabled]=\"!AddEventForm.form.valid\">Opret Event</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { switchMap, tap, startWith, map } from 'rxjs/operators';\r\nimport { Event } from '../../models/event';\r\nimport { FormGroup, FormControl, FormBuilder, Validators, NgForm } from '@angular/forms';\r\nimport { formatDate } from '@angular/common';\r\nimport { Participant } from 'src/app/models/participant';\r\nimport { EventRegistrationService } from 'src/app/services/event-registration.service';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-event',\r\n  templateUrl: './admin-event.component.html',\r\n  styleUrls: ['./admin-event.component.css']\r\n})\r\nexport class AdminEventComponent implements OnInit {\r\n\r\n  event: Observable<Event>;\r\n  eventId: string;\r\n\r\n  participants: Observable<Participant[]>;\r\n  filter: FormControl;\r\n  filter$: Observable<string>;\r\n  filteredParticipants: Observable<Participant[]>;\r\n\r\n  eventForm: FormGroup;\r\n  model: Participant;\r\n\r\n  buttonText: String;\r\n  hasRoute: Observable<boolean>;\r\n\r\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private eventService: EventService, private eventRegService: EventRegistrationService, private router: Router) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    //Initializing the formgroup\r\n    this.eventForm = this.formBuilder.group({\r\n      name: ['', Validators.required],\r\n      eventStart: ['', Validators.required],\r\n      eventEnd: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      startTime: ['', Validators.required],\r\n      endTime: ['', Validators.required]\r\n    });\r\n\r\n    this.setEvent();\r\n    this.setParticipants();\r\n\r\n    this.event.subscribe(event => {\r\n      this.eventId = event.eventId\r\n      this.model = new Participant(\"\", \"\", \"\", \"\", \"\", event.eventId, \"\")\r\n    });\r\n\r\n    //Checks if the event has a route or not\r\n    this.route.paramMap.pipe(switchMap((params: ParamMap) => {\r\n      return this.eventService.hasRoute(parseInt(params.get('eventId')))\r\n    })).subscribe(hasRoute => {\r\n      if (hasRoute)\r\n        this.buttonText = \"Se Rute\";\r\n      else\r\n        this.buttonText = \"Planlæg rute\";\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Gets the participants of the event and initialize the search filter\r\n   */\r\n  setParticipants() {\r\n    this.participants = this.route.paramMap.pipe(\r\n      switchMap((params: ParamMap) =>\r\n        this.eventRegService.getParticipants(parseInt(params.get('eventId'))))\r\n    )\r\n\r\n    this.filter = new FormControl('');\r\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\r\n\r\n    this.filteredParticipants = combineLatest(this.participants, this.filter$)\r\n      .pipe(map(([participants, filterString]) => participants.filter(participant =>\r\n        participant.firstname.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 ||\r\n        participant.lastname.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 ||\r\n        participant.shipName.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 ||\r\n        participant.teamName.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 ||\r\n        participant.emailUsername.toLowerCase().indexOf(filterString.toLowerCase()) !== -1\r\n      )));\r\n  }\r\n\r\n  /**\r\n   * Filling the FormGroup with the event information\r\n   */\r\n  setEvent() {\r\n    this.event = this.route.paramMap.pipe(\r\n      switchMap((params: ParamMap) =>\r\n        this.eventService.getEvent(parseInt(params.get('eventId'))).pipe(tap(event => {\r\n          this.eventForm.patchValue(event);\r\n\r\n          //Formatting the dates and times\r\n          this.eventForm.controls['eventStart'].setValue(formatDate(event.eventStart, 'yyyy-MM-dd', 'en'));\r\n          this.eventForm.controls['eventEnd'].setValue(formatDate(event.eventEnd, 'yyyy-MM-dd', 'en'));\r\n\r\n          let startTime = new Date(event.eventStart);\r\n          startTime.setUTCHours(startTime.getUTCHours() - 2);\r\n          this.eventForm.controls['startTime'].setValue(formatDate(startTime, 'HH:mm', 'en'));\r\n\r\n          let endTime = new Date(event.eventEnd);\r\n          endTime.setUTCHours(endTime.getUTCHours() - 2);\r\n          this.eventForm.controls['endTime'].setValue(formatDate(endTime, 'HH:mm', 'en'));\r\n        })))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Event handler for submitting changes to the event information\r\n   */\r\n  onEventSubmit() {\r\n    let newEvent = new Event();\r\n    newEvent.eventStart = this.eventForm.controls['eventStart'].value + \"T\" + this.eventForm.controls['startTime'].value + \":00.000+00:00\";\r\n    newEvent.eventEnd = this.eventForm.controls['eventEnd'].value + \"T\" + this.eventForm.controls['endTime'].value + \":00.000+00:00\";\r\n    newEvent.name = this.eventForm.controls['name'].value;\r\n    newEvent.city = this.eventForm.controls['city'].value;\r\n\r\n    this.event.subscribe(event => {\r\n      newEvent.eventId = event.eventId;\r\n      this.eventService.updateEvent(newEvent, newEvent.eventId).subscribe(event => {\r\n        alert(\"De nye eventinformationer er gemt\");\r\n        this.setEvent();\r\n      },\r\n        error => {\r\n          console.log(error);\r\n        });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event handler for submitting a new participant to the event\r\n   * @param form \r\n   */\r\n  onSubmit(form: NgForm) {\r\n    this.eventRegService.addParticipant(this.model).pipe()\r\n      .subscribe(participant => {\r\n        this.setParticipants();\r\n        form.reset();\r\n      },\r\n        error => {\r\n          console.log(error.status);\r\n        });\r\n  }\r\n\r\n  /**\r\n   * Event handler for submitting changes to a given participants information\r\n   * @param participant \r\n   */\r\n  editParticipant(participant) {\r\n    this.eventRegService.updateParticipant(participant).subscribe(participant => {\r\n      alert(\"Deltagerens nye informationer er gemt\");\r\n      this.setParticipants();\r\n    }, error => {\r\n      console.log(error.status);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event handler for deleting a given participant from the event\r\n   * @param participant \r\n   */\r\n  deleteParticipant(participant) {\r\n    this.eventRegService.deleteParticipant(participant.eventRegId).subscribe(participant => {\r\n      this.setParticipants();\r\n    }, error => {\r\n      console.log(error.status);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event handler for deleting the whole event\r\n   */\r\n  deleteEvent() {\r\n    this.eventService.deleteEvent(this.eventId).subscribe(event => {\r\n      this.router.navigateByUrl('/administrerEvents');\r\n    }, error => {\r\n      console.log(error.status);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Event handler for starting an event\r\n   */\r\n  startEvent() {\r\n    this.eventService.startEvent(this.eventId).subscribe(event => {\r\n      this.setEvent();\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event handler for stopping an event\r\n   */\r\n  stopEvent() {\r\n    this.eventService.stopEvent(this.eventId).subscribe(event => {\r\n      this.setEvent();\r\n    }, error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n}\r\n","<div id=\"image\">\r\n    <div class=\"container h-100\">\r\n        <div class=\"row h-100 align-items-end pb-4\">\r\n            <div class=\"image-text col-lg text-start\">\r\n                <h1 class=\"font-weight-normal text-white\">Administrer Event</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n    <section class=\"eventList pt-4 col-lg-6\">\r\n        <div class=\"container\">\r\n\r\n            <!-- FormGroup for editing event information -->\r\n            <form [formGroup]=\"eventForm\" *ngIf=\"event | async\" (ngSubmit)=\"onEventSubmit()\">\r\n                <div class=\"event row p-1 pb-2\">\r\n                    <div class=\"pt-4\">\r\n                        <img id=\"eventIcon\" src=\"../../../assets/images/pin.png\">\r\n                    </div>\r\n                    <div class=\"col-sm pt-1\">\r\n                        <input id=\"eventName\" class=\"font-weight-bold font-size-l\" type=\"text\" formControlName=\"name\">\r\n                        <div class=\"row pl-3 pt-2\">\r\n                            <input class=\"font-weight-light font-size-l\" type=\"date\" formControlName=\"eventStart\"\r\n                                value=\"{{(event | async).eventStart | date:'yyyy-MM-dd'}}\">\r\n                            <input class=\"font-weight-light ml-1\" type=\"date\" formControlName=\"eventEnd\"\r\n                                value=\"{{(event | async).eventEnd | date:'yyyy-MM-dd'}}\">\r\n                        </div>\r\n                        <div class=\"row pl-3 pt-2\">\r\n                            <input class=\"font-weight-light mr-1\" type=\"text\" formControlName=\"startTime\">\r\n                            <input class=\"font-weight-light\" type=\"text\" formControlName=\"endTime\">\r\n                        </div>\r\n                        <div class=\"row pl-3 pt-2\">\r\n                            <input class=\"font-weight-light\" type=\"text\" formControlName=\"city\">\r\n                            <button type=\"submit\" [disabled]=\"!eventForm.valid\"\r\n                                class=\"btn btn-outline-info ml-2\">Gem</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- Event buttons -->\r\n                    <div class=\"col-sm\">\r\n                        <button type=\"button\" *ngIf=\"!(event|async).isLive\" id=\"eventHandler\"\r\n                            class=\"btn btn-success mr-4\" (click)=\"startEvent()\">Start Event</button>\r\n                        <button type=\"button\" *ngIf=\"(event|async).isLive\" id=\"eventHandler\" class=\"btn btn-danger mr-4\"\r\n                            (click)=\"stopEvent()\">Stop Event</button>\r\n                        <button type=\"button\" class=\"btn btn-info \" routerLink=\"ruteplanner\">{{buttonText}}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <!-- List of participants -->\r\n        <div class=\"container pb-4\">\r\n            <h4 class=\"pt-4\">Deltagere</h4>\r\n            <table>\r\n                <tr>\r\n                    <th class=\"pr-5 \">Fornavn</th>\r\n                    <th class=\"pr-5\">Efternavn</th>\r\n                    <th class=\"pr-5\">Skibsnavn</th>\r\n                    <th class=\"pr-5\">Teamnavn</th>\r\n                    <th>Email</th>\r\n                </tr>\r\n                <tr *ngFor=\"let participant of filteredParticipants | async\">\r\n                    <td>\r\n                        <input class=\"form-control\" required [(ngModel)]=\"participant.firstname\" #firstname=\"ngModel\"\r\n                            name=\"firstname\">\r\n                    </td>\r\n                    <td>\r\n                        <input class=\"form-control\" required [(ngModel)]=\"participant.lastname\" #lastname=\"ngModel\"\r\n                            name=\"lastname\">\r\n                    </td>\r\n                    <td>\r\n                        <input class=\"form-control\" required [(ngModel)]=\"participant.shipName\" #shipName=\"ngModel\"\r\n                            name=\"shipName\">\r\n                    </td>\r\n                    <td>\r\n                        <input class=\"form-control\" required [(ngModel)]=\"participant.teamName\" #teamName=\"ngModel\"\r\n                            name=\"teamName\">\r\n                    </td>\r\n                    <td>\r\n                        <input class=\"form-control\" required [(ngModel)]=\"participant.emailUsername\"\r\n                            #emailUsername=\"ngModel\" name=\"emailUsername\" disabled>\r\n                    </td>\r\n                    <td><button type=\"button\" class=\"btn btn-outline-info\"\r\n                            (click)=\"editParticipant(participant)\">Gem</button></td>\r\n                    <td><button type=\"button\" class=\"btn btn-info\" (click)=\"deleteParticipant(participant)\">\r\n                            <i class=\"fa fa-times\"></i>\r\n                        </button></td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </section>\r\n\r\n    <!-- Right side menu -->\r\n    <div id=\"rightMenu\" class=\"col\">\r\n        <form class=\"form-inline p-3 pt-4\">\r\n            <input class=\"form-control mr-sm-2 form-control-sm\" type=\"search\" placeholder=\"Søg efter deltager\"\r\n                [formControl]=\"filter\" aria-label=\"Søg\">\r\n            <button class=\"btn btn-outline-info my-2 my-sm-0 btn-sm\" type=\"submit\">Søg</button>\r\n        </form>\r\n\r\n        <!-- Form for adding participant -->\r\n        <div class=\"container justify-content-center col-sm-9 mt-5\">\r\n            <form id=\"AddParticipant\" class=\"p-3 pt-4 justify-content-center\" #AddParticipantForm=\"ngForm\"\r\n                (ngSubmit)=\"onSubmit(AddParticipantForm)\">\r\n                <div class=\"row justify-content-center pb-3\">\r\n                    <h3 class=\"font-weight-normal\">Tilføj deltager her</h3>\r\n                </div>\r\n                <div class=\"row justify-content-center pb-2\">\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Fornavn\" required\r\n                            [(ngModel)]=\"model.firstname\" #firstname=\"ngModel\" name=\"firstname\">\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Efternavn\" required\r\n                            [(ngModel)]=\"model.lastname\" #lastname=\"ngModel\" name=\"lastname\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row justify-content-center pb-2\">\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Bådnavn\" required\r\n                            [(ngModel)]=\"model.shipName\" #shipName=\"ngModel\" name=\"shipName\">\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Teamnavn\" required\r\n                            [(ngModel)]=\"model.teamName\" #teamName=\"ngModel\" name=\"teamName\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row justify-content-center pr-3\">\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Email\" required\r\n                            [(ngModel)]=\"model.emailUsername\" #email=\"ngModel\" name=\"email\">\r\n                    </div>\r\n                    <button class=\"btn btn-info my-sm-0 btn-sm \" type=\"submit\"\r\n                        [disabled]=\"!AddParticipantForm.form.valid\">Tilmeld</button>\r\n                </div>\r\n            </form>\r\n\r\n            <div class=\"row container justify-content-center pt-3\">\r\n                <p>eller</p>\r\n            </div>\r\n            <div class=\"row container justify-content-center \">\r\n                <button class=\"btn btn-info\">Importer fra CSV</button>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Button for deleting the event -->\r\n        <div id=\"bottom\" class=\"justify-content-bottom\">\r\n            <button class=\"btn btn-danger\" (click)=\"deleteEvent()\">Slet event</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Event } from '../../models/event';\r\nimport { Score } from '../../models/score';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { RacePointService } from 'src/app/services/race-point.service';\r\nimport { LocationRegistrationService } from 'src/app/services/location-registration.service';\r\nimport { EventRegistrationService } from 'src/app/services/event-registration.service';\r\nimport { Participant } from 'src/app/models/participant';\r\n\r\n\r\n@Component({\r\n  selector: 'app-event',\r\n  templateUrl: './event.component.html',\r\n  styleUrls: ['./event.component.css']\r\n})\r\n\r\nexport class EventComponent implements OnInit {\r\n\r\n  event: Observable<Event>;\r\n  scoreboard: Observable<Score[]>;\r\n  participants: Observable<Participant[]>;\r\n  hasRoute = false;\r\n  raceIsOver: boolean;\r\n\r\n  @ViewChild('mapContainer', { static: false }) gmap: ElementRef;\r\n  map: google.maps.Map;\r\n  coordinates;\r\n  mapOptions: google.maps.MapOptions;\r\n  markers = []\r\n\r\n  constructor(private eventRegService: EventRegistrationService, private locationRegService: LocationRegistrationService, private route: ActivatedRoute, private eventService: EventService, private racePointService: RacePointService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.event = this.route.paramMap.pipe(\r\n      switchMap((params: ParamMap) =>\r\n        this.eventService.getEvent(parseInt(params.get('eventId'))))\r\n    );\r\n\r\n    //Showing event info depending on the event state\r\n    this.event.subscribe(event => {\r\n      if (event.isLive || event.actualEventStart === undefined) {\r\n        this.raceIsOver = false;\r\n        this.setParticipants(event);\r\n      }\r\n      else {\r\n        this.raceIsOver = true;\r\n        this.setScoreboard(event);\r\n      }\r\n    })\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n\r\n    //Setting the map if the event has a route planned\r\n    this.route.paramMap.pipe(switchMap((params: ParamMap) => {\r\n      return this.eventService.hasRoute(parseInt(params.get('eventId')))\r\n    })).subscribe(route => {\r\n      if (route) {\r\n        this.hasRoute = true;\r\n        this.mapInitializer();\r\n      }\r\n      else\r\n        this.hasRoute = false;\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Initializing the map and setting event checkpoints\r\n   */\r\n  mapInitializer() {\r\n    this.coordinates = new google.maps.LatLng(54.982711, 9.775667);\r\n    this.mapOptions = {\r\n      center: this.coordinates,\r\n      zoom: 11\r\n    };\r\n    this.map = new google.maps.Map(this.gmap.nativeElement, this.mapOptions);\r\n\r\n    this.route.paramMap.pipe(switchMap((params: ParamMap) => {\r\n      return this.racePointService.getAllEventRacePoints(parseInt(params.get('eventId'))).pipe(racePoints => { return racePoints })\r\n    })).subscribe(racePoints => {\r\n      racePoints.forEach(racePoint => {\r\n        this.placeMarker(new google.maps.LatLng(racePoint.firstLatitude, racePoint.firstLongtitude), racePoint.type);\r\n        this.placeMarker(new google.maps.LatLng(racePoint.secondLatitude, racePoint.secondLongtitude), racePoint.type);\r\n      })\r\n      this.map.setCenter(this.markers[0].position);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Placing a marker on the map\r\n   * @param latLng The latitude and longitude og the marker\r\n   * @param type the type of marker\r\n   */\r\n  placeMarker(latLng, type) {\r\n\r\n    var marker = new google.maps.Marker({\r\n      position: latLng,\r\n      map: this.map,\r\n    })\r\n\r\n    if (type === \"finishLine\") {\r\n      marker.setIcon('../assets/images/finishflag.png');\r\n    }\r\n    else if (type === \"startLine\") {\r\n      marker.setIcon('../assets/images/startline.png')\r\n    }\r\n    this.markers.push(marker);\r\n\r\n    if (this.markers.length % 2 === 0) {\r\n      let marker1 = this.markers[this.markers.length - 2];\r\n      let marker2 = this.markers[this.markers.length - 1];\r\n      this.setPolyline(marker1, marker2);\r\n    }\r\n    marker.setMap(this.map);\r\n  }\r\n\r\n  /**\r\n   * Sets a polyline between the two given markers\r\n   * @param marker1 \r\n   * @param marker2 \r\n   */\r\n  setPolyline(marker1, marker2) {\r\n    var lineCoordinates = [marker1.position, marker2.position]\r\n    var line = new google.maps.Polyline({\r\n      path: lineCoordinates,\r\n      geodesic: true,\r\n      strokeColor: '#FF0000',\r\n      strokeOpacity: 1.0,\r\n      strokeWeight: 2\r\n    });\r\n    line.setMap(this.map);\r\n    return line;\r\n  }\r\n\r\n  /**\r\n   * Get all the participants for the event\r\n   * @param event \r\n   */\r\n  setParticipants(event) {\r\n    this.participants = this.eventRegService.getParticipants(event.eventId);\r\n  }\r\n\r\n  /**\r\n   * Get the scoreboard for the event\r\n   * @param event\r\n   */\r\n  setScoreboard(event) {\r\n    this.scoreboard = this.locationRegService.getScoreboard(event.eventId);\r\n  }\r\n}\r\n","<div id=\"image\">\r\n    <div class=\"container h-100\">\r\n        <div class=\"row h-100 align-items-end pb-4\">\r\n            <div class=\"image-text col-lg text-start\">\r\n                <h1 class=\"font-weight-normal text-white\">Event</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n    <section class=\"eventList pt-4 col-lg-6\">\r\n\r\n        <!-- Event information -->\r\n        <div class=\"container\" *ngIf=\"event | async as event\">\r\n            <div class=\"event row p-1 pb-3\">\r\n                <div class=\"pt-2\">\r\n                    <img id=\"eventIcon\" src=\"../../../assets/images/pin.png\">\r\n                </div>\r\n                <div class=\"col-sm\">\r\n                    <h1 class=\"font-weight-light\">{{event.name}}</h1>\r\n                    <div id=\"date\" class=\"row pl-3\">\r\n                        <label class=\"h5 font-weight-normal\">{{event.eventStart | date:'d. MMM yyyy'}} - {{event.eventEnd | date:'d. MMM yyyy'}}</label>\r\n                    </div>\r\n                    <div class=\"row pl-3\">\r\n                        <label class=\"h6 font-weight-normal\">{{event.eventStart | date:'HH:mm'}} - {{event.eventEnd | date:'HH:mm'}}</label>\r\n                    </div>\r\n                    <div id=\"city\" class=\"row pl-3\">\r\n                        <label class=\"font-weight-bold\">{{event.city}}</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <!-- Scoreboard -->\r\n        <div id=\"scoreboard\" class=\"container pt-4\" *ngIf='raceIsOver'>\r\n            <h4>Scoreboard</h4>\r\n            <table class=\"table\">\r\n                <tr>\r\n                    <th>Placering</th>\r\n                    <th>Ejer/Kaptajn</th>\r\n                    <th>Skibsnavn</th>\r\n                    <th>Team navn</th>\r\n                </tr>\r\n                <tr *ngFor='let score of scoreboard | async'>\r\n                    <td>{{score.placement}}</td>\r\n                    <td>{{score.owner}}</td>\r\n                    <td>{{score.shipName}}</td>\r\n                    <td>{{score.teamName}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n\r\n        <!-- List of participants -->\r\n        <div class=\"container pt-4\" *ngIf='!raceIsOver'>\r\n            <h4>Deltagere</h4>\r\n            <table id=\"participantsTable\" class=\"table\">\r\n                <tr>\r\n                    <th>Ejer/Kaptajn</th>\r\n                    <th>Båd</th>\r\n                    <th>Team navn</th>\r\n                </tr>\r\n                <tr *ngFor='let participant of participants | async'>\r\n                    <td>{{participant.firstname}} {{participant.lastname}}</td>\r\n                    <td>{{participant.shipName}}</td>\r\n                    <td>{{participant.teamName}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </section>\r\n    \r\n    <!-- Right side menu -->\r\n    <div id=\"rightMenu\" class=\"col\">\r\n        <div *ngIf=\"!hasRoute\" class=\"pt-2\">\r\n            Der er endnu ikke fastlagt en rute\r\n        </div>\r\n        <section [(ngModel)]=\"hasRoute\" class=\"eventList pt-4 col\">\r\n            <div #mapContainer id=\"map\"></div>\r\n        </section>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Event } from 'src/app/models/Event';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.css']\r\n})\r\n\r\nexport class EventsComponent implements OnInit {\r\n\r\n  events: Observable<Event[]>;\r\n  filter: FormControl;\r\n  filter$: Observable<string>;\r\n  filteredEvents: Observable<Event[]>;\r\n\r\n  constructor(private eventService: EventService) {\r\n    this.events = this.eventService.getEvents();\r\n    this.filter = new FormControl('');\r\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\r\n\r\n    //Setting searchfilter\r\n    this.filteredEvents = combineLatest(this.events, this.filter$)\r\n      .pipe(map(([events, filterString]) => events.filter(event => event.name.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 || event.city.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\r\n   }\r\n\r\n  ngOnInit(): void {}\r\n\r\n}\r\n","<div id=\"image\">\r\n    <div class=\"container h-100 align-items-start\">\r\n        <div class=\"row h-100 align-items-end pb-4\">\r\n            <div class=\" col-lg text-start\">\r\n                <h1 class=\"image-text font-weight-normal text-white pb-2 pl-3 pr-3\">Events</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n    <section class=\"eventList pt-4 col-lg-6\">\r\n\r\n        <!-- List of events -->\r\n        <div class=\"container pb-4\" *ngFor=\"let event of filteredEvents | async\">\r\n            <div class=\"event row p-1 pb-3\">\r\n                <div class=\"pt-2\">\r\n                    <img id=\"eventIcon\" src=\"../../../assets/images/pin.png\">\r\n                </div>\r\n                <div class=\"col-sm\">\r\n                    <a id=\"eventLink\" class=\"btn btn-link\" [routerLink]=\"['/events', event.eventId, event.name]\" routerLinkActive=\"active\"><h4 class=\"pt-1\">{{event.name}}</h4></a>\r\n                    <div id=\"date\" class=\"row pl-3\">\r\n                        <label>{{event.eventStart | date:'d. MMM yyyy'}} - {{event.eventEnd | date:'d. MMM yyyy'}}</label>\r\n                    </div>\r\n                    <div id=\"city\" class=\"row pl-3\">\r\n                        <label>{{event.city}}</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm pt-4\" *ngIf=\"event.isLive\">\r\n                    <button class=\"btn btn-info\" [routerLink]=\"['/events', event.eventId, event.name, 'live']\" routerLinkActive=\"active\">Se live</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"(filteredEvents | async).length === 0\">\r\n            Ingen events macthede det søgte\r\n        </div>\r\n    </section>\r\n\r\n    <!-- Right side menu -->\r\n    <div id=\"rightMenu\" class=\"col\">\r\n        <form class=\"form-inline p-3 pt-4\">\r\n            <input class=\"form-control mr-sm-2 form-control-sm\" type=\"search\" placeholder=\"Søg efter event\" [formControl]=\"filter\" aria-label=\"Søg\">\r\n            <button class=\"btn btn-outline-info my-2 my-sm-0 btn-sm\" type=\"submit\">Søg</button>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- Image -->\r\n<header class=\"masthead\">\r\n    <div class=\"container h-100\">\r\n        <div class=\"row h-100 align-items-center\">\r\n            <div class=\"image-text col-12 text-center\">\r\n                <h1 class=\"font-weight-normal text-white\">Live tracking til sejlads</h1>\r\n                <p class=\"lead font-weight-normal text-white\">Gør svær at følge sport interessant med GPS-sporing i realtid</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n<!-- Page Content -->\r\n<section class=\"py-5\">\r\n    <div class=\"container\">\r\n        <h2 class=\"font-weight-light\">Velkommen</h2>\r\n        <p>Udforsk vores hjemmeside hvor du har mulighed som tilskuer, for både at tilmelde dig et event, følge events live eller se tilbage på resultaterne fra tidligere events. Er du bestyrer af et event, har du også mulighed for at administrer dine events her.</p>\r\n    </div>\r\n</section>\r\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\nimport { switchMap, startWith, race } from 'rxjs/operators';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { Event } from '../../models/event';\r\nimport { RacePointService } from 'src/app/services/race-point.service';\r\nimport { Observable, interval } from 'rxjs';\r\nimport { Score } from 'src/app/models/score';\r\nimport { LocationRegistrationService } from 'src/app/services/location-registration.service';\r\n\r\n@Component({\r\n  selector: 'app-live-event',\r\n  templateUrl: './live-event.component.html',\r\n  styleUrls: ['./live-event.component.css']\r\n})\r\nexport class LiveEventComponent implements OnInit {\r\n\r\n  @ViewChild('mapContainer', { static: false }) gmap: ElementRef;\r\n  map: google.maps.Map;\r\n  mapOptions: google.maps.MapOptions;\r\n  coordinates;\r\n  markers = [];\r\n  boatMarkers = [];\r\n\r\n  timer: any;\r\n\r\n  event: Event;\r\n  scoreboard: Observable<Score[]>;\r\n\r\n  constructor(private route: ActivatedRoute, private eventService: EventService, private racePointService: RacePointService, private locationRegService: LocationRegistrationService) {\r\n    this.coordinates = new google.maps.LatLng(54.982711, 9.775667);\r\n    this.mapOptions = {\r\n      center: this.coordinates,\r\n      zoom: 11\r\n    };\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      switchMap((params: ParamMap) =>\r\n        this.eventService.getEvent(parseInt(params.get('eventId'))).pipe(event => { return event }))).subscribe(event => { this.event = event });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.mapInitializer();\r\n  }\r\n\r\n  /**\r\n   * Initializing the map with start- and finishline\r\n   */\r\n  mapInitializer() {\r\n    this.map = new google.maps.Map(this.gmap.nativeElement, this.mapOptions);\r\n\r\n    this.route.paramMap.pipe(switchMap((params: ParamMap) => {\r\n      return this.racePointService.getStartAndFinish(parseInt(params.get('eventId'))).pipe(racePoints => { return racePoints })\r\n    })).subscribe(racePoints => {\r\n      console.log(\"racepoints lenght\" + racePoints.length)\r\n      this.placeMarker(new google.maps.LatLng(racePoints[0].firstLatitude, racePoints[0].firstLongtitude), '../assets/images/startline.png');\r\n      this.placeMarker(new google.maps.LatLng(racePoints[0].secondLatitude, racePoints[0].secondLongtitude), '../assets/images/startline.png');\r\n\r\n      this.placeMarker(new google.maps.LatLng(racePoints[racePoints.length - 1].firstLatitude, racePoints[racePoints.length - 1].firstLongtitude), '../assets/images/finishflag.png');\r\n      this.placeMarker(new google.maps.LatLng(racePoints[racePoints.length - 1].secondLatitude, racePoints[racePoints.length - 1].secondLongtitude), '../assets/images/finishflag.png');\r\n\r\n      this.map.setCenter(new google.maps.LatLng(racePoints[0].firstLatitude, racePoints[0].firstLongtitude));\r\n      this.initializeBoatTracking();\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Place the given marker on the map\r\n   * @param latLng Latitude and longitude of the marker\r\n   * @param url The image url for the marker\r\n   */\r\n  placeMarker(latLng, url) {\r\n\r\n    var marker = new google.maps.Marker({\r\n      position: latLng,\r\n      map: this.map,\r\n      icon: url\r\n    })\r\n\r\n    this.markers.push(marker);\r\n\r\n    if (this.markers.length % 2 === 0) {\r\n      let marker1 = this.markers[this.markers.length - 2];\r\n      let marker2 = this.markers[this.markers.length - 1];\r\n      var polyline = this.setPolyline(marker1, marker2);\r\n    }\r\n    marker.setMap(this.map);\r\n  }\r\n\r\n  /**\r\n   * Place a polyline between the two given markers\r\n   * @param marker1 \r\n   * @param marker2 \r\n   */\r\n  setPolyline(marker1, marker2) {\r\n    var lineCoordinates = [marker1.position, marker2.position]\r\n    var line = new google.maps.Polyline({\r\n      path: lineCoordinates,\r\n      geodesic: true,\r\n      strokeColor: '#000000',\r\n      strokeOpacity: 1.0,\r\n      strokeWeight: 2\r\n    });\r\n    line.setMap(this.map);\r\n  }\r\n\r\n  /**\r\n   * Calling the backend every 1 second to get ship positions\r\n   */\r\n  initializeBoatTracking() {\r\n    this.timer = setInterval(() => {\r\n      this.locationRegService.getLive(this.event.eventId).subscribe(scores => {\r\n        this.setBoatMarkers(scores);\r\n        return scores;\r\n      }, error => {\r\n\r\n      });\r\n    }, 1000);\r\n  }\r\n\r\n  /**\r\n   * Setting or moving the the ship markers to the new given positions\r\n   * @param scores \r\n   */\r\n  setBoatMarkers(scores: Score[]) {\r\n\r\n    this.scoreboard = new Observable<Score[]>((observer) => {\r\n      observer.next(scores);\r\n    });\r\n\r\n    if (this.boatMarkers === null || this.boatMarkers.length === 0) {\r\n      scores.forEach(score => {\r\n        let boat = new google.maps.Marker({\r\n          position: new google.maps.LatLng(score.locationsRegistrations[0].latitude, score.locationsRegistrations[0].longtitude),\r\n          map: this.map,\r\n          icon: '../assets/images/boatIcon.png',\r\n          label: {\r\n            text: score.placement.toString(),\r\n            color: score.color\r\n          }\r\n        })\r\n        boat.setMap(this.map);\r\n        boat.setTitle(score.shipId.toString() + \" \" + score.teamName);\r\n        this.boatMarkers.push(boat);\r\n      });\r\n    }\r\n    else {\r\n      this.boatMarkers.forEach(boat => {\r\n        let index = scores.map(function (e) { return e.shipId }).indexOf(parseInt(boat.getTitle()));\r\n        boat.setLabel({text: scores[index].placement.toString(), color: scores[index].color})\r\n        boat.setPosition(new google.maps.LatLng(scores[index].locationsRegistrations[0].latitude, scores[index].locationsRegistrations[0].longtitude));\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stopping the interval calls to the backend\r\n   */\r\n  ngOnDestroy() {\r\n    clearInterval(this.timer);\r\n  }\r\n}\r\n\r\n\r\n","<div class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n\r\n    <!-- The map -->\r\n    <section class=\"eventList pt-4 col-lg-6\">\r\n        <div #mapContainer id=\"map\"></div>\r\n    </section>\r\n\r\n    <!-- Right side menu -->\r\n    <div id=\"rightMenu\" class=\"col\">\r\n        <div class=\"row pt-4 pl-3\">\r\n            <h3>Event: </h3>\r\n            <h3 class=\"font-weight-light pl-2\">{{event.name}}</h3>\r\n        </div>\r\n\r\n        <!-- The scoreboard -->\r\n        <div id=\"scoreboard\" class=\"row pl-3 pr-3\">\r\n            <table id=\"table\" class=\"table justify-content-center\">\r\n                <tr>\r\n                    <th class=\"pt-1 text-center\">Placering</th>\r\n                    <th class=\"pt-1\">Team navn</th>\r\n                    <th class=\"pt-1\">Farve</th>\r\n                </tr>\r\n\r\n                <tr *ngFor=\"let score of scoreboard | async\">\r\n                    <td class=\"text-center\">{{score.placement}}</td>\r\n                    <td class=\"pl-3 pr-0\">{{score.teamName}}</td>\r\n                    <td>{{score.color}}</td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { User } from 'src/app/models/user';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport * as decode from 'jwt-decode';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public model: User;\r\n  public wrongLogin: boolean = false;\r\n  public wrongPassword: boolean = false;\r\n\r\n  constructor(private userService: UserService, private cookieService: CookieService, private router: Router, private appComponent: AppComponent) {\r\n    this.model = new User();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * Event handler for clicking login\r\n   */\r\n  OnSubmit() {\r\n    this.userService.login(this.model.emailUsername, this.model.password).pipe(first())\r\n      .subscribe(user => {\r\n        this.cookieService.set('user', JSON.stringify(user), 1);\r\n        \r\n        if (user.role === \"admin\") {\r\n          this.router.navigate(['/administrerEvents']);\r\n        }\r\n        else {\r\n          this.router.navigate(['/mineEvents']);\r\n        }\r\n        this.appComponent.updateUser();\r\n      },\r\n      //Showing error message to the user depending on the http respons\r\n        error => {\r\n          if (error.status === 401) {\r\n            this.model.password = \"\";\r\n            this.wrongLogin = false;\r\n            this.wrongPassword = true;\r\n          }\r\n          else if(error.status === 404)\r\n            this.model.emailUsername = \"\";\r\n            this.model.password = \"\";\r\n            this.wrongPassword = false;\r\n            this.wrongLogin = true;\r\n        });\r\n  }\r\n}\r\n","<div class=\"register\">\r\n    <div class=\"register-left\">\r\n        <img src=\"assets/images/shipIcon.png\" />\r\n        <h3 class=\"header\">Log ind</h3>\r\n\r\n        <!-- Login form -->\r\n        <form class=\"form\" (ngSubmit)=\"OnSubmit()\">\r\n            <input class=\"form-control\" type=\"text\" placeholder=\"Email/brugernavn\" [(ngModel)]=\"model.emailUsername\"\r\n                name=\"email\" #email=\"ngModel\">\r\n            <input class=\"form-control\" type=\"password\" placeholder=\"Adgangskode\" [(ngModel)]=\"model.password\"\r\n                name=\"password\" #password=\"ngModel\">\r\n            <div *ngIf=\"(email.touched || password.touched) && (email.pristine || password.pristine)\">\r\n                <div *ngIf=\"wrongLogin\">\r\n                    Der findes ikke en bruger med den indtastede email\r\n                </div>\r\n                <div *ngIf=\"wrongPassword\">\r\n                    Forkert adgangskode\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <input id=\"login\" type=\"submit\" value=\"Login\" routerLink=\"/logind\" />\r\n        </form>\r\n        <br />\r\n        <p><a routerLink=\"/tilmelding\">Opret profil</a></p>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-page-not-found',\r\n  templateUrl: './page-not-found.component.html',\r\n  styleUrls: ['./page-not-found.component.css']\r\n})\r\nexport class PageNotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n<div class=\"mainbox\">\r\n    <div class=\"err\">404</div>\r\n    <div class=\"msg\">Måske er denne side flyttet? Blevet slettet? Gemmer sig i karentænen? Aldrig eksisteret til at starte med?<p>Lad os tage <a [routerLink]=\"['/hjem']\">hjem</a> og fortsætte derfra.</p></div>\r\n      </div>\r\n    </body>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Ship } from 'src/app/models/ship';\r\nimport { User } from 'src/app/models/user';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ShipService } from 'src/app/services/ship.service';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  ships: Observable<Ship[]>\r\n  user: User;\r\n  model = new Ship();\r\n\r\n  constructor(private cookieService: CookieService, private http: HttpClient, private shipService: ShipService, private userService: UserService, private appComponent: AppComponent) { }\r\n\r\n  ngOnInit(): void {\r\n    this.setShips();\r\n    this.user = JSON.parse(this.cookieService.get('user'));\r\n  }\r\n\r\n  /**\r\n   * Getting all users ships\r\n   */\r\n  setShips() {\r\n    this.ships = this.shipService.getMyShips();\r\n  }\r\n\r\n  /**\r\n   * Event handler for deleting a ship\r\n   * @param ship \r\n   */\r\n  deleteShip(ship) {\r\n    this.shipService.deleteShip(ship.shipId).subscribe(ship => this.setShips());\r\n  }\r\n\r\n  /**\r\n   * Event handler for submitting changes to the user profile\r\n   */\r\n  OnSubmit() {\r\n    this.userService.updateUser(this.user).subscribe(res => {\r\n      this.cookieService.set('user', JSON.stringify(this.user));\r\n      this.appComponent.updateUser();\r\n      alert(\"Dine nye oplysninger er nu gemt\")\r\n    }, error => {\r\n      this.user = JSON.parse(this.cookieService.get('user'));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event handler for submitting a new ship\r\n   */\r\n  OnShipSubmit() {\r\n    this.shipService.addShip(this.model).subscribe(ship => this.setShips());\r\n  }\r\n}\r\n","<div id=\"image\">\r\n    <div class=\"container h-100 align-items-start\">\r\n        <div class=\"row h-100 align-items-end pb-4\">\r\n            <div class=\" col-lg text-start\">\r\n                <h1 class=\"image-text font-weight-normal text-white pb-2 pl-3 pr-3\">Din profil</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div id=\"main\" class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n    <div class=\"pt-5 col-lg-6\">\r\n        <div id=\"profileInfo\">\r\n            <h4 class=\"ml-5 mb-4\">Dine profiloplysninger</h4>\r\n\r\n            <!-- Form for user information -->\r\n            <form class=\"form\" #updateUserForm=\"ngForm\" (ngSubmit)=\"OnSubmit()\">\r\n                <div class=\"row ml-5 mb-2\">\r\n                    <div class=\"col-xsm\">\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Fornavn\" required\r\n                            [(ngModel)]=\"user.firstname\" #firstname=\"ngModel\" name=\"firstname\">\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"text\" class=\"form-control ml-3\" placeholder=\"Efternavn\" required\r\n                            [(ngModel)]=\"user.lastname\" #lastname=\"ngModel\" name=\"lastname\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row ml-5 mb-2\">\r\n                    <div class=\"col-xsm\">\r\n                        <input type=\"password\" class=\"psw form-control\" placeholder=\"Gamle adgangskode\">\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" class=\"psw form-control ml-3\" placeholder=\"Ny adgangskode\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row ml-5\">\r\n                    <div>\r\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Email\" required\r\n                            [(ngModel)]=\"user.emailUsername\" #emailUsername=\"ngModel\" name=\"emailUsername\">\r\n                    </div>\r\n                    <div>\r\n                        <button class=\"btn btn-outline-info ml-3\" type=\"submit\"\r\n                            [disabled]=\"!updateUserForm.form.valid\">Gem ændringer</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n\r\n        <!-- List of ships -->\r\n        <div class=\"container pt-4 ml-4\" *ngFor=\"let ship of ships | async\">\r\n            <div class=\"row p-1 pb-3\">\r\n                <div class=\"pt-2\">\r\n                    <img id=\"ship\" src=\"../../../assets/images/boatIcon.png\">\r\n                </div>\r\n                <div class=\"col-xsm pt-4 pl-1\">\r\n                    <h5 class=\"font-weight-normal\">{{ship.name}}</h5>\r\n                </div>\r\n                <div class=\"col pt-3 pl-3\">\r\n                    <button class=\"btn\" (click)=\"deleteShip(ship)\">\r\n                        <i class=\"fa fa-times-circle\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <!-- Right side menu -->\r\n    <div id=\"rightMenu\" class=\"col\">\r\n\r\n        <!-- Form for submitting new ship -->\r\n        <form id=\"addShip\" class=\"p-3 pt-4 justify-content-center\" #AddShipForm=\"ngForm\" (ngSubmit)=\"OnShipSubmit()\">\r\n            <div class=\"row justify-content-center pb-3\">\r\n                <h3 class=\"font-weight-normal\">Tilføj båd her</h3>\r\n            </div>\r\n            <div class=\"row justify-content-center pb-2\">\r\n                <div class=\"col\">\r\n                    <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Båd navn\" required\r\n                        [(ngModel)]=\"model.name\" #shipName=\"ngModel\" name=\"shipName\">\r\n                </div>\r\n                <button class=\"btn btn-info my-sm-0 btn-sm mr-3\" type=\"submit\"\r\n                    [disabled]=\"!AddShipForm.form.valid\">Tilføj båd</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { User } from 'src/app/models/user';\r\nimport { UserService } from 'src/app/services/user.service';\r\nimport { Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { AppComponent } from 'src/app/app.component';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  public model: User;\r\n  public isAvaliable: boolean = true;\r\n\r\n  constructor(private userService: UserService, private router: Router, private cookieService: CookieService, private appComponent: AppComponent) {\r\n    this.model = new User();\r\n  }\r\n\r\n  /**\r\n   * Event handler for submitting as new user\r\n   */\r\n  OnSubmit() {\r\n    this.userService.registerUser(this.model).pipe(first())\r\n      .subscribe(user => {\r\n        this.model.role = \"user\";\r\n        this.cookieService.set('user', JSON.stringify(this.model), 1);\r\n        this.router.navigateByUrl('/mineEvents');\r\n        this.appComponent.updateUser();\r\n      },\r\n        error => {\r\n          if (error.status === 409) {\r\n            this.model.emailUsername = \"\";\r\n            this.isAvaliable = false;\r\n          }\r\n        });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<div class=\"register\">\r\n    <div class=\"row\">\r\n\r\n        <!-- Login -->\r\n        <div class=\"col-md-3 register-left\">\r\n            <img src=\"assets/images/shipIcon.png\" />\r\n            <h3>Velkommen</h3>\r\n            <p>Hvis du allerede har en profil kan du logge ind her</p>\r\n            <input type=\"submit\" value=\"Login\" routerLink=\"/logind\" /><br />\r\n        </div>\r\n        <div class=\"col-md-9 register-right\">\r\n\r\n            <!-- Register form -->\r\n            <h3 class=\"register-heading\">Opret en profil</h3>\r\n            <form (ngSubmit)=\"OnSubmit()\" #registerForm=\"ngForm\">\r\n                <div class=\"row register-form\">\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"model.firstname\" #firstname=\"ngModel\"\r\n                                name=\"firstname\" placeholder=\"Fornavn\" pattern=\"^[a-zA-ZÆØÅæøå ]*\" required />\r\n                            <div *ngIf=\"firstname.invalid && firstname.touched\">\r\n                                <div *ngIf=\"firstname.errors.required\">\r\n                                    Fornavn er nødvendig\r\n                                </div>\r\n                                <div *ngIf=\"firstname.errors.pattern\">\r\n                                    Fornavn må kun indeholde bogstaver\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"model.lastname\" #lastname=\"ngModel\"\r\n                                name=\"lastname\" placeholder=\"Efternavn\" pattern=\"^[a-zA-ZÆØÅæøå ]*\" required />\r\n                            <div *ngIf=\"lastname.invalid && lastname.touched\">\r\n                                <div *ngIf=\"lastname.errors.required\">\r\n                                    Efternavn er nødvendig\r\n                                </div>\r\n                                <div *ngIf=\"lastname.errors.pattern\">\r\n                                    Efternavn må kun indeholde bogstaver\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <input type=\"email\" class=\"form-control\" placeholder=\"Email\"\r\n                                [(ngModel)]=\"model.emailUsername\" #email=\"ngModel\" name=\"email\"\r\n                                pattern=\"^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$\"\r\n                                required />\r\n                            <div *ngIf=\"email.invalid && email.touched\">\r\n                                <div *ngIf=\"email.errors.required\">\r\n                                    Email er nødvendig\r\n                                </div>\r\n                                <div *ngIf=\"email.errors.pattern\">\r\n                                    Ugyldig email\r\n                                </div>\r\n                                <div *ngIf=\"!isAvaliable\">\r\n                                    Der eksisterer allerede en bruger med denne email\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <div class=\"form-group\">\r\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Adgangskode\" value=\"\"\r\n                                [(ngModel)]=\"model.password\" #password=\"ngModel\" name=\"password\"\r\n                                pattern=\"^(?=.*[a-zA-ZÆØÅæøå])(?=.*\\d)[a-zA-ZÆØÅæøå\\d]*$\" minlength=\"8\" required />\r\n\r\n                            <div *ngIf=\"password.invalid && password.touched\">\r\n                                <div *ngIf=\"password.errors.required\">\r\n                                    Adgangskode er nødvendig\r\n                                </div>\r\n                                <div *ngIf=\"password.errors.pattern\">\r\n                                    Adgangskoden skal indeholde både tal og bogstaver\r\n                                </div>\r\n                                <div *ngIf=\"password.errors.minlength\">\r\n                                    Adgangskoden skal være mindst 8 karakterer lang\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <input type=\"password\" class=\"form-control\" placeholder=\"Bekræft Adgangskode\" value=\"\"\r\n                                [(ngModel)]=\"model.confirmPassword\" #confirmPassword=\"ngModel\" name=\"confirmPassword\"\r\n                                ngValidateEqual=\"password\" required />\r\n                            <div *ngIf=\"confirmPassword.invalid && confirmPassword.touched\">\r\n                                <div *ngIf=\"confirmPassword.errors.required\">\r\n                                    Bekræft Adgangskode er nødvendig\r\n                                </div>\r\n                                <div *ngIf=\"confirmPassword.hasError('notEqual') && password.valid\">\r\n                                    Matcher ikke ovenstående adgangskode\r\n                                </div>\r\n                            </div>\r\n                            <input type=\"submit\" class=\"btnRegister\" value=\"Registrer\"\r\n                                [disabled]=\"!registerForm.form.valid\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { CheckPoint } from 'src/app/models/check-point';\r\nimport { Event } from '../../models/event';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { RacePointService } from 'src/app/services/race-point.service';\r\nimport { RacePoint } from 'src/app/models/race-point';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-rute-planner',\r\n  templateUrl: './rute-planner.component.html',\r\n  styleUrls: ['./rute-planner.component.css']\r\n})\r\nexport class RutePlannerComponent implements OnInit {\r\n\r\n  @ViewChild('mapContainer', { static: false }) gmap: ElementRef;\r\n  map: google.maps.Map;\r\n\r\n  event: Event;\r\n  coordinates;\r\n  markers = [];\r\n  polylines = [];\r\n  checkPoints = [];\r\n  racePoints: RacePoint[];\r\n  secondMarker = false;\r\n  mapOptions: google.maps.MapOptions;\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.pipe(\r\n      switchMap((params: ParamMap) =>\r\n        this.eventService.getEvent(parseInt(params.get('eventId'))).pipe(event => { return event }))).subscribe(event => { this.event = event });\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute, private eventService: EventService, private racePointService: RacePointService, private location: Location) {\r\n    this.coordinates = new google.maps.LatLng(54.982711, 9.775667);\r\n    this.mapOptions = {\r\n      center: this.coordinates,\r\n      zoom: 10\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Placing a marker on the map\r\n   * @param latLng Latitude and Longitude of the marker\r\n   * @param type the type of marker\r\n   */\r\n  placeMarker(latLng) {\r\n\r\n    var marker = new google.maps.Marker({\r\n      position: latLng,\r\n      map: this.map,\r\n    })\r\n\r\n    if (this.markers.length === 0 || this.markers.length === 1) {\r\n      marker.setIcon('../assets/images/startline.png');\r\n    }\r\n    else {\r\n      if (this.markers.length > 3)\r\n        this.markers[this.markers.length - 2].setIcon('../assets/images/MapPin.png');\r\n      marker.setIcon('../assets/images/finishflag.png')\r\n    }\r\n\r\n    this.markers.push(marker);\r\n\r\n    if (this.markers.length % 2 === 0) {\r\n      let marker1 = this.markers[this.markers.length - 2];\r\n      let marker2 = this.markers[this.markers.length - 1];\r\n      var polyline = this.setPolyline(marker1, marker2);\r\n      this.setCheckpoint(marker1, marker2, polyline);\r\n    }\r\n    marker.setMap(this.map);\r\n  }\r\n\r\n  /**\r\n   * Sets a polyline between the two given markers\r\n   * @param marker1 \r\n   * @param marker2 \r\n   */\r\n  setPolyline(marker1, marker2): google.maps.Polyline {\r\n    var lineCoordinates = [marker1.position, marker2.position]\r\n    var line = new google.maps.Polyline({\r\n      path: lineCoordinates,\r\n      geodesic: true,\r\n      strokeColor: '#FF0000',\r\n      strokeOpacity: 1.0,\r\n      strokeWeight: 2\r\n    });\r\n    this.polylines.push(line);\r\n    line.setMap(this.map);\r\n    return line;\r\n  }\r\n\r\n  /**\r\n   * Saving the two given markers and polyline as a checkpoint\r\n   * @param marker1 \r\n   * @param marker2 \r\n   * @param polyline \r\n   */\r\n  setCheckpoint(marker1, marker2, polyline) {\r\n    this.checkPoints.push(new CheckPoint(this.checkPoints.length + 1, marker1, marker2, polyline));\r\n  }\r\n\r\n\r\n  ngAfterViewInit() {\r\n    this.mapInitializer();\r\n\r\n    //Setting the already planned event markers \r\n    this.route.paramMap.pipe(switchMap((params: ParamMap) => {\r\n      return this.racePointService.getAllEventRacePoints(parseInt(params.get('eventId'))).pipe(racePoints => { return racePoints })\r\n    })).subscribe(racePoints => {\r\n      racePoints.forEach(racePoint => {\r\n        this.placeMarker(new google.maps.LatLng(racePoint.firstLatitude, racePoint.firstLongtitude));\r\n        this.placeMarker(new google.maps.LatLng(racePoint.secondLatitude, racePoint.secondLongtitude));\r\n      })\r\n      this.map.setCenter(this.markers[0].position);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initializing the map\r\n   */\r\n  mapInitializer() {\r\n    this.map = new google.maps.Map(this.gmap.nativeElement, this.mapOptions);\r\n    this.map.addListener('click', (event) => {\r\n      this.placeMarker(event.latLng);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Deleting the given checkpoint\r\n   * @param checkPointChoosen \r\n   */\r\n  deleteCheckPoint(checkPointChoosen) {\r\n\r\n    this.checkPoints.forEach(checkPoint => {\r\n      if (this.checkPoints.indexOf(checkPointChoosen) < this.checkPoints.indexOf(checkPoint)) {\r\n        checkPoint.id = checkPoint.id - 1;\r\n      }\r\n    })\r\n    this.deleteCheckPointMarkers(checkPointChoosen)\r\n\r\n    this.checkPoints.splice(this.checkPoints.indexOf(checkPointChoosen), 1);\r\n  }\r\n\r\n  /**\r\n   * Removing the given checkpoints markers and polyline\r\n   * @param checkPoint \r\n   */\r\n  deleteCheckPointMarkers(checkPoint) {\r\n    if (this.markers.length - 2 === this.markers.indexOf(checkPoint.pin1) && this.markers.indexOf(checkPoint.pin1) !== 2) {\r\n      this.markers[this.markers.length - 4].setIcon('../assets/images/finishflag.png');\r\n      this.markers[this.markers.length - 3].setIcon('../assets/images/finishflag.png');\r\n    }\r\n\r\n    checkPoint.pin1.setMap(null);\r\n    checkPoint.pin2.setMap(null);\r\n    checkPoint.polyline.setMap(null);\r\n\r\n    this.markers.splice(this.markers.indexOf(checkPoint.pin1), 2);\r\n    this.polylines.splice(this.polylines.indexOf(checkPoint.polyline), 1);\r\n  }\r\n\r\n  /**\r\n   * Saving the checkpoints in the backend\r\n   */\r\n  saveRoute() {\r\n    this.racePoints = [];\r\n    this.checkPoints.forEach(checkpoint => {\r\n      let newRacePoint = new RacePoint(checkpoint.pin1.getPosition().lng(), checkpoint.pin1.getPosition().lat(), checkpoint.pin2.getPosition().lng(), checkpoint.pin2.getPosition().lat(), parseInt(this.event.eventId), this.racePoints.length + 1);\r\n      if (checkpoint.id === 1)\r\n        newRacePoint.type = \"startLine\";\r\n      else if (checkpoint.id === this.checkPoints.length)\r\n        newRacePoint.type = \"finishLine\";\r\n      else\r\n        newRacePoint.type = \"checkpoint\";\r\n\r\n      this.racePoints.push(newRacePoint);\r\n    });\r\n\r\n    this.racePointService.saveRoute(this.racePoints, parseInt(this.event.eventId)).pipe().subscribe(racepoints => {\r\n      this.location.back();\r\n    },\r\n      error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n\r\n    <!-- map -->\r\n    <section class=\"eventList pt-4 col-lg-6\">\r\n        <div #mapContainer id=\"map\"></div>\r\n    </section>\r\n\r\n    <!-- Right side menu -->\r\n    <div id=\"rightMenu\" class=\"col\">\r\n        <div class=\"row pt-4 pl-3\">\r\n            <h3>Event: </h3>\r\n            <h3 class=\"font-weight-light pl-2\">{{event.name}}</h3>\r\n        </div>\r\n\r\n        <!-- List of checkpoints -->\r\n        <div id=\"checkPoints\" class=\"row pl-3 pr-3\">\r\n\r\n            <table id=\"table\" class=\"table justify-content-center\">\r\n                <tr>\r\n                    <th class=\"pl-2 pt-1\">CheckPoint</th>\r\n                    <th class=\"pl-3 pt-1\">Pin koordinater</th>\r\n                    <th class=\"pt-1\">Pin koordinater</th>\r\n                </tr>\r\n\r\n                <tr *ngFor=\"let checkPoint of checkPoints\">\r\n                    <td class=\"text-center\">{{checkPoint.id}}</td>\r\n                    <td class=\"pl-3 pr-0\">{{checkPoint.pin1.position}}</td>\r\n                    <td>{{checkPoint.pin2.position}}</td>\r\n                    <td class=\"pr-5 mr-5\">\r\n                        <button id=\"removeCheckPoint\" type=\"button\" class=\"btn\" (click)=\"deleteCheckPoint(checkPoint)\">\r\n                            <i class=\"fa fa-times-circle\"></i>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            </table>\r\n        </div>\r\n        <div *ngIf=\"checkPoints.length > 1\" class=\"row justify-content-center\">\r\n            <button class=\"btn btn-info mb-3\" (click)=\"saveRoute()\">Gem rute</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, combineLatest } from 'rxjs';\r\nimport { FormControl, NgForm } from '@angular/forms';\r\nimport { EventService } from 'src/app/services/event.service';\r\nimport { startWith, map } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MyEvents } from 'src/app/models/my-events';\r\nimport { EventSignUp } from 'src/app/models/event-sign-up';\r\nimport { Ship } from 'src/app/models/ship';\r\nimport { ShipService } from 'src/app/services/ship.service';\r\nimport { EventRegistrationService } from 'src/app/services/event-registration.service';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.css']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  events: Observable<MyEvents[]>;\r\n  filter: FormControl;\r\n  filter$: Observable<string>;\r\n  filteredEvents: Observable<MyEvents[]>;\r\n\r\n  ships: Observable<Ship[]>;\r\n  model = new EventSignUp(\"\", \"\");\r\n  alreadySignedUp:boolean = false;\r\n  WrongEventCode:boolean = false;\r\n\r\n  constructor(private eventService: EventService, private eventRegService: EventRegistrationService, private shipService: ShipService, private cookieService:CookieService) {\r\n    this.setMyEvents();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  /**\r\n   * Get all the events the user is a participant of and initialize the search function\r\n   */\r\n  setMyEvents()\r\n  {\r\n    this.events = this.eventService.getMyEvents();\r\n    this.ships = this.shipService.getMyShips(); \r\n    this.filter = new FormControl('');\r\n    this.filter$ = this.filter.valueChanges.pipe(startWith(''));\r\n\r\n    this.filteredEvents = combineLatest(this.events, this.filter$)\r\n      .pipe(map(([events, filterString]) => events.filter(event => event.name.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 || event.city.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 || event.teamName.toLowerCase().indexOf(filterString.toLowerCase()) !== -1 || event.shipName.toLowerCase().indexOf(filterString.toLowerCase()) !== -1)));\r\n  }\r\n\r\n  /**\r\n   * Event handler for submitting as a participant to an event\r\n   * @param form \r\n   */\r\n  OnSubmit(form: NgForm)\r\n  {\r\n    this.eventRegService.SignUpForEvent(this.model.ship.shipId, this.model.teamName, this.model.eventCode).pipe()\r\n    .subscribe(eventReg => {\r\n      this.setMyEvents();\r\n      form.reset();\r\n      this.WrongEventCode = false;\r\n      this.alreadySignedUp = false;\r\n    }, \r\n    error => {\r\n      if(error.status === 409)\r\n      {\r\n        console.log(\"error message: \"+error.message);\r\n        this.model.eventCode = \"\";\r\n        this.WrongEventCode = false;\r\n        this.alreadySignedUp = true;\r\n      }\r\n      else if(error.status === 404)\r\n      {\r\n        console.log(\"error message: \"+error.statusText+error.url);\r\n        this.alreadySignedUp = false;\r\n        this.WrongEventCode = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Event handler for unsubmitting as participant to an event\r\n   * @param event \r\n   */\r\n  unSubToEvent(event){\r\n    console.log(\"delete eventReg called\")\r\n    this.eventRegService.deleteParticipant(event.eventRegId).subscribe(eventReg => {\r\n      this.setMyEvents();\r\n    }, error => {\r\n      console.log(error.status);\r\n    });\r\n  }\r\n}\r\n","<div id=\"image\">\r\n    <div class=\"container h-100 align-items-start\">\r\n        <div class=\"row h-100 align-items-end pb-4\">\r\n            <div class=\" col-lg text-start\">\r\n                <h1 class=\"image-text font-weight-normal text-white pl-3 pr-3\">Tilmeldte events</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-lg-2\"></div>\r\n    <section class=\"eventList pt-4 col-lg-6\">\r\n\r\n        <!-- List of events -->\r\n        <div class=\"container\" *ngFor=\"let event of filteredEvents | async\">\r\n            <div class=\"event row p-1 pb-3\">\r\n                <div class=\"pt-2\">\r\n                    <img id=\"eventIcon\" src=\"../../../assets/images/pin.png\">\r\n                </div>\r\n                <div class=\"col-sm\">\r\n                    <a id=\"eventLink\" class=\"btn btn-link\" [routerLink]=\"['/events', event.eventId, event.name]\"\r\n                        routerLinkActive=\"active\">\r\n                        <h4 class=\"pt-1\">{{event.name}}</h4>\r\n                    </a>\r\n                    <div id=\"date\" class=\"row pl-3\">\r\n                        <label>{{event.eventStart | date}} - {{event.eventEnd | date}}</label>\r\n                    </div>\r\n                    <div id=\"city\" class=\"row pl-3\">\r\n                        <label>{{event.city}}</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm pt-4\">\r\n                    <div class=\"row\">\r\n                        <label class=\"font-weight-bold pr-1\">Team navn:</label>\r\n                        <label>{{event.teamName}}</label>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <label class=\"font-weight-bold pr-1\">Båd: </label>\r\n                        <label>{{event.shipName}}</label>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-sm pt-4\">\r\n                    <button *ngIf=\"event.actualEventStart === undefined\" class=\"btn btn-outline-danger\"\r\n                        (click)=\"unSubToEvent(event)\">Afmeld\r\n                        <a class=\"fa fa-times\"></a>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"!(events | async) || (events | async).length === 0\">\r\n            <p>Du er endnu ikke tilmeldt nogen events</p>\r\n        </div>\r\n    </section>\r\n\r\n    <!-- Right side menu -->\r\n    <div id=\"rightMenu\" class=\"col\">\r\n        <form class=\"form-inline p-3 pt-3\">\r\n            <input class=\"form-control mr-sm-2 form-control-sm\" type=\"search\" placeholder=\"Søg efter event\"\r\n                [formControl]=\"filter\" aria-label=\"Søg\">\r\n            <button class=\"btn btn-outline-info my-2 my-sm-0 btn-sm\" type=\"submit\">Søg</button>\r\n        </form>\r\n\r\n        <!-- Participant submit form -->\r\n        <div class=\"container justify-content-center col-sm-9 mt-5\">\r\n            <form id=\"eventReg\" class=\"p-3 pt-4 justify-content-center\" #SignUpForm=\"ngForm\"\r\n                (ngSubmit)=\"OnSubmit(SignUpForm)\">\r\n                <div class=\"row justify-content-center pb-3\">\r\n                    <h3 class=\"font-weight-normal\">Tilmeld dig et event her</h3>\r\n                </div>\r\n                <div class=\"row justify-content-center pb-2\">\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Team navn\" required\r\n                            [(ngModel)]=\"model.teamName\" #teamName=\"ngModel\" name=\"teamName\">\r\n                    </div>\r\n                    <div id=\"selectLabel\" class=\"col-sm-2 pt-1\">\r\n                        <label>Båd: </label>\r\n                    </div>\r\n                    <div class=\"col p-0 pr-3\">\r\n                        <select id=\"select\" class=\"form-control\" required [(ngModel)]=\"model.ship\" name=\"shipName\">\r\n                            <option *ngFor=\"let ship of (ships | async)\" [ngValue]=\"ship\">{{ship.name}}</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row justify-content-center pr-3\">\r\n                    <div class=\"col\">\r\n                        <input class=\"form-control mr-sm-2 form-control-sm\" placeholder=\"Eventkode\" required\r\n                            [(ngModel)]=\"model.eventCode\" #eventCode=\"ngModel\" name=\"eventCode\">\r\n                    </div>\r\n                    <button class=\"btn btn-info my-sm-0 btn-sm \" type=\"submit\"\r\n                        [disabled]=\"!SignUpForm.form.valid\">Tilmeld</button>\r\n                </div>\r\n                <div *ngIf=\"alreadySignedUp\" class=\"row justify-content-center pt-2\">\r\n                    <label>Du er allerede tilmeldt dette event</label>\r\n                </div>\r\n                <div *ngIf=\"WrongEventCode\" class=\"row justify-content-center pt-2\">\r\n                    <label>Ugyldig eventkode</label>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport * as decode from 'jwt-decode';\r\nimport { User } from '../models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  private user: User;\r\n\r\n  constructor(private router: Router, private cookieService: CookieService) { }\r\n\r\n  /**\r\n   * Determines if the user is allowed access to route\r\n   * @param route \r\n   */\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const expectedRole = route.data.expectedRole;\r\n    if (this.cookieService.check('user') && this.Authenticate(expectedRole)) {\r\n      return true;\r\n    }\r\n    else {\r\n      this.router.navigate([\"/logind\"]);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Authenticates the users role with the necesarry role for the route\r\n   * @param expectedRole \r\n   */\r\n  Authenticate(expectedRole): boolean {\r\n    this.user = JSON.parse(this.cookieService.get('user'));\r\n    const tokenDecoded = this.getDecodedAccessToken(this.user.token);\r\n\r\n    if (expectedRole === \"admin\" && tokenDecoded.role !== expectedRole)\r\n      return false;\r\n    else\r\n      return true;\r\n  }\r\n\r\n  /**\r\n   * Decodes the token\r\n   * @param token \r\n   */\r\n  getDecodedAccessToken(token: string): any {\r\n    try {\r\n      return decode(token);\r\n    }\r\n    catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n}\r\n","export class Event {\r\n    constructor(\r\n        public eventId?:string, \r\n        public name?:string, \r\n        public eventStart?:string, \r\n        public eventEnd?:string, \r\n        public city?:string, \r\n        public eventCode?:string, \r\n        public eventStartTime?: string, \r\n        public eventEndTime?: string, \r\n        public isLive?:boolean, \r\n        public actualEventStart?: string\r\n        ){}\r\n}\r\n","export class CheckPoint {\r\n    constructor(\r\n        public id: number, \r\n        public pin1: google.maps.Marker, \r\n        public pin2: google.maps.Marker, \r\n        public polyline: google.maps.Polyline\r\n        ){}\r\n}\r\n","import { Ship } from './ship';\r\n\r\nexport class EventSignUp {\r\n    constructor(\r\n        public teamName: string, \r\n        public eventCode: string, \r\n        public ship?: Ship\r\n        ){}\r\n}\r\n","export class Event {\r\n    constructor(\r\n        public eventId?:string, \r\n        public name?:string, \r\n        public eventStart?:string, \r\n        public eventEnd?:string, \r\n        public city?:string, \r\n        public eventCode?:string, \r\n        public eventStartTime?: string, \r\n        public eventEndTime?: string, \r\n        public isLive?:boolean, \r\n        public actualEventStart?: string\r\n        ){}\r\n}\r\n","export class Participant {\r\n    constructor(\r\n        public firstname: string, \r\n        public lastname: string, \r\n        public shipName:string, \r\n        public teamName: string, \r\n        public emailUsername: string, \r\n        public eventId?:string, \r\n        public eventRegId?: string\r\n        ){}\r\n}\r\n","export class RacePoint {\r\n    constructor(\r\n        public firstLongtitude?: number, \r\n        public firstLatitude?:number, \r\n        public secondLongtitude?: number, \r\n        public secondLatitude?: number, \r\n        public eventId?: Number, \r\n        public racePointNumber?: Number, \r\n        public racePointId?: Number, \r\n        public type?: string\r\n        ){}\r\n}\r\n","export class Ship {\r\n    constructor(\r\n        public shipId?: number, \r\n        public name?: string\r\n        ){}\r\n}\r\n","export class User {\r\n    public firstname:string;\r\n    public lastname:string;\r\n    public emailUsername:string;\r\n    public phone:string;\r\n    public username:string;\r\n    public password:string;\r\n    public confirmPassword:string;\r\n    public token:string;\r\n    public role:string;\r\n    constructor(){}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { EventRegistration } from '../models/event-registration';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Participant } from '../models/participant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventRegistrationService {\r\n\r\n  //  private eventRegistrationUrl = 'https://oxbridgecloud.azurewebsites.net/eventRegistrations/';\r\n\r\n  private eventRegistrationUrl = 'http://localhost:3000/eventRegistrations/';\r\n\r\n  constructor(private cookieService: CookieService, private http: HttpClient) { }\r\n\r\n  /**\r\n   * Sends a http post request to the backend, in order to sign up for an event\r\n   * @param shipId \r\n   * @param teamName \r\n   * @param eventCode \r\n   */\r\n  public SignUpForEvent(shipId:number, teamName:string, eventCode:string): Observable<EventRegistration> {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.post<EventRegistration>(this.eventRegistrationUrl+\"signUp\", {shipId, teamName, eventCode}, httpOptions).pipe(map(eventReg => { return eventReg}));\r\n  }\r\n\r\n  /**\r\n   * Sends a http get request to the backend in order to get all participants of an event and returns the respons\r\n   * @param eventId \r\n   */\r\n  public getParticipants(eventId:Number): Observable<Participant[]>{\r\n    return this.http.get<Participant[]>(this.eventRegistrationUrl+\"getParticipants/\"+eventId).pipe(map(participants => { return participants }))\r\n  }\r\n\r\n  /**\r\n   * Sends a http post request to the backend, in order to add a participant to an event\r\n   * @param participant \r\n   */\r\n  public addParticipant(participant): Observable<Participant>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.post<Participant>(this.eventRegistrationUrl+\"addParticipant\", participant, httpOptions).pipe(map(participant => {return participant}));\r\n  }\r\n\r\n  /**\r\n   * Sends a http put request to the backend, in order to update a participants information\r\n   * @param participant \r\n   */\r\n  public updateParticipant(participant): Observable<Participant>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.put<Participant>(this.eventRegistrationUrl+\"updateParticipant/\"+participant.eventRegId, participant, httpOptions).pipe(map(participant => {return participant}));\r\n  }\r\n\r\n  /**\r\n   * Sends a http delete request to the backend, in order to delete an participant for an event\r\n   * @param eventRegId \r\n   */\r\n  public deleteParticipant(eventRegId): Observable<EventRegistration>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.delete<EventRegistration>(this.eventRegistrationUrl+eventRegId, httpOptions).pipe(map(eventRegistration => {return eventRegistration}));\r\n  }\r\n\r\n  public unSubscribeToEvent(eventRegId): Observable<EventRegistration>\r\n  {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.delete<EventRegistration>(this.eventRegistrationUrl+eventRegId, httpOptions).pipe(map(eventReg => {return eventReg}));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Event } from 'src/app/models/event';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MyEvents } from '../models/my-events';\r\nimport { EventRegistration } from '../models/event-registration';\r\nimport { Participant } from '../models/participant';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  // private eventsUrl = 'https://oxbridgecloud.azurewebsites.net/events/';\r\n\r\n  private eventsUrl = 'http://localhost:3000/events/';\r\n  constructor(private http: HttpClient, private cookieService:CookieService) { }\r\n\r\n  /**\r\n   * Sends a http get event to the backend, in order to retrieve all events\r\n   */\r\n  public getEvents(): Observable<Event[]> {\r\n    return this.http.get<Event[]>(this.eventsUrl)\r\n      .pipe(\r\n        catchError(this.handleError<Event[]>('getEvents', []))\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Sends a http get request to the backend, in order to retrieve an specific event\r\n   * @param eventId - The id of the event\r\n   */\r\n  public getEvent(eventId:Number): Observable<Event> {\r\n    return this.http.get<Event>(this.eventsUrl+eventId)\r\n      .pipe(map(event => { return event}));\r\n  }\r\n\r\n  /**\r\n   * Sends a http get request to the backend, in order to retrieve all events, that the user is a participant of\r\n   */\r\n  public getMyEvents(): Observable<MyEvents[]> {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    console.log(\"user token: \"+user.token);\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.get<MyEvents[]>(this.eventsUrl+\"myEvents/findFromUsername\", httpOptions)\r\n      .pipe(map(events => { return events }));\r\n  }\r\n\r\n  /**\r\n   * Sends a http post request to the backend, in order to create a new event\r\n   * @param event - the new event\r\n   */\r\n  public AddEvent(event: Event): Observable<Event> {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    \r\n    event.eventStart = event.eventStart+\"T\"+event.eventStartTime+\":00.000+00:00\";\r\n    event.eventEnd = event.eventEnd+\"T\"+event.eventEndTime+\":00.000+00:00\";\r\n\r\n    return this.http.post<Event>(this.eventsUrl, event, httpOptions).pipe(map(event => { return event }));\r\n  }\r\n\r\n  /**\r\n   * Sends a http put request to the backend, in order to update an event  \r\n   * @param event - The new event information\r\n   * @param eventId - The id of the event\r\n   */\r\n  public updateEvent(event, eventId): Observable<Event>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.put(this.eventsUrl+eventId, event, httpOptions).pipe(map(event => {return event}));\r\n  }\r\n\r\n  /**\r\n   * Sends a http delete request to the backend, in order to delete an event\r\n   * @param eventId - The id of the event\r\n   */\r\n  public deleteEvent(eventId): Observable<Event>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.delete(this.eventsUrl+eventId, httpOptions).pipe(map(event => {return event}));\r\n  }\r\n\r\n  /**\r\n   * Sends a http get request to the backend, in order to check if the event has a route\r\n   * @param eventId - The id of the event\r\n   */\r\n  public hasRoute(eventId: Number): Observable<boolean>{\r\n    return this.http.get<boolean>(this.eventsUrl+\"hasRoute/\"+eventId).pipe(map(res => { return res }))\r\n  }\r\n\r\n  /**\r\n   * Sends a http put request to the backend, in order to start an event\r\n   * @param eventId - The id of the event\r\n   */\r\n  public startEvent(eventId): Observable<Event>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    let dateTimeNow = new Date(Date.now());\r\n    dateTimeNow.setHours(dateTimeNow.getHours()+2);\r\n    return this.http.put<Event>(this.eventsUrl+\"startEvent/\"+eventId, {actualEventStart: dateTimeNow.toUTCString()}, httpOptions).pipe(map(event => { return event }));\r\n  }\r\n\r\n  /**\r\n   * Sends a http get request to the backend, in order to stop an event\r\n   * @param eventId - The id of the event\r\n   */\r\n  public stopEvent(eventId): Observable<Event>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.get<Event>(this.eventsUrl+\"stopEvent/\"+eventId, httpOptions).pipe(map(event => {return event}));\r\n  }\r\n\r\n  /**\r\n   * Handle Http operation that failed.\r\n   * Let the app continue.\r\n   * @param operation - name of the operation that failed\r\n   * @param result - optional value to return as the observable result\r\n   */\r\n  private handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      return null;\r\n    };\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Score } from '../models/score';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationRegistrationService {\n\n  private locationRegUrl = \"http://localhost:3000/locationRegistrations/\";\n\n  //private locationRegUrl = \"https://oxbridgecloud.azurewebsites.net/locationRegistrations/\";\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Sends a http get request to the backend, in order to get the latest standings in a race\n   * @param eventId - The id of the event\n   */\n  public getLive(eventId): Observable<Score[]>\n  {\n    return this.http.get<Score[]>(this.locationRegUrl+\"getLive/\"+eventId).pipe(map(score => { return score}));\n  }\n\n  /**\n   * Sends a http get request to the backend, in order to get the final scores\n   * @param eventId - The id of the event\n   */\n  public getScoreboard(eventId): Observable<Score[]>\n  {\n    return this.http.get<Score[]>(this.locationRegUrl+\"getScoreboard/\"+eventId).pipe(map(score => {return score}));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { CheckPoint } from '../models/check-point';\nimport { RacePoint } from '../models/race-point';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RacePointService {\n\n  // private racepointUrl = 'https://oxbridgecloud.azurewebsites.net/racepoints/';\n\n  private racepointUrl = 'http://localhost:3000//racepoints/';\n  \n  constructor(private http: HttpClient, private cookieService: CookieService) { }\n\n  /**\n   * Sends a http get request to the backend, in order to get all racepoints\n   * @param eventId - The id of the event\n   */\n  public getAllEventRacePoints(eventId: Number): Observable<RacePoint[]> {\n\n    return this.http.get<RacePoint[]>(this.racepointUrl + \"fromEventId/\" + eventId)\n      .pipe(map(racePoints => { return racePoints }));\n  }\n\n  /**\n   * Sends a http get request to the backend, in order to get start and finish points\n   * @param eventId - The id of the event\n   */\n  public getStartAndFinish(eventId): Observable<RacePoint[]>{\n    return this.http.get<RacePoint[]>(this.racepointUrl+\"findStartAndFinish/\"+eventId).pipe(map(racePoints => { return racePoints }))\n  }\n\n  /**\n   * Sends a http post request to the backend, in order to save a new route\n   * @param racepoints - The racepoints of the route\n   * @param eventId - The id of the event\n   */\n  public saveRoute(racepoints: RacePoint[], eventId:number): Observable<RacePoint[]> {\n    let user = JSON.parse(this.cookieService.get('user'));\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'x-access-token': user.token\n      })\n    }\n    return this.http.post<RacePoint[]>(this.racepointUrl+\"createRoute/\"+eventId, racepoints, httpOptions).pipe(map(racepoints => {return racepoints}));\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Ship } from '../models/ship';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShipService {\r\n\r\n  private shipUrl = 'https://oxbridgecloud.azurewebsites.net/ships/'\r\n\r\n  constructor(private http: HttpClient, private cookieService:CookieService) { }\r\n\r\n  /**\r\n   * Sends a http get request to the backend, in order to get all users ships\r\n   */\r\n  public getMyShips(): Observable<Ship[]> {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.get<Ship[]>(this.shipUrl+\"myShips/fromUsername\", httpOptions)\r\n      .pipe(map(ships => { return ships }));\r\n  }\r\n\r\n  /**\r\n   * Sends a http delete request to the backend, in order to delete a ship\r\n   * @param shipId - The id of the ship\r\n   */\r\n  public deleteShip(shipId): Observable<Ship>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.delete<Ship>(this.shipUrl+shipId, httpOptions)\r\n      .pipe(map(ship => { return ship }));\r\n  }\r\n\r\n  /**\r\n   * Sends a http post request to the backend, in order to add a ship\r\n   * @param newShip - The new ship to be added\r\n   */\r\n  public addShip(newShip: Ship): Observable<Ship>\r\n  {\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.post<Ship>(this.shipUrl, newShip, httpOptions).pipe(map(ship => { return ship }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { User } from '../models/user';\r\nimport * as decode from 'jwt-decode';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private userUrl = 'https://oxbridgecloud.azurewebsites.net/users/'\r\n\r\n  constructor(private http: HttpClient, private cookieService: CookieService) { }\r\n\r\n  /**\r\n   * Sends a http post request to the backend, in order to register as a new user\r\n   * @param newUser - The new user to be registered\r\n   */\r\n  public registerUser(newUser: User): Observable<User> {\r\n    return this.http.post<User>(this.userUrl+\"register\", newUser).pipe(map(user => {\r\n      user.role = this.getDecodedAccessToken(user.token).role;\r\n      return user;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Sends a http post request to the backend, in order to login\r\n   * @param emailUsername - The emailUsername of the user\r\n   * @param password - The password of the user\r\n   */\r\n  public login(emailUsername:string, password:string): Observable<User> {\r\n    return this.http.post<User>(this.userUrl+'login', {emailUsername, password}).pipe(map(user => {\r\n      user.role = this.getDecodedAccessToken(user.token).role;\r\n      return user;\r\n    }));\r\n  }\r\n\r\n  /**\r\n   * Decodes the given token\r\n   * @param token - The token that should be decoded\r\n   */\r\n  getDecodedAccessToken(token: string): any {\r\n    try {\r\n      return decode(token);\r\n    }\r\n    catch (error) {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sends a http put request to the backend, in order to update a user\r\n   * @param newUser - The updated user\r\n   */\r\n  public updateUser(newUser): Observable<User>{\r\n    let user = JSON.parse(this.cookieService.get('user'));\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'x-access-token': user.token\r\n      })\r\n    }\r\n    return this.http.put<User>(this.userUrl+user.emailUsername, newUser, httpOptions).pipe(map(user => { return user }));\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}