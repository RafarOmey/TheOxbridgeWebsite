{"version":3,"file":"ng-validate-equal.js","sources":["ng:/ng-validate-equal/lib/ng-validate-equal.directive.ts","ng:/ng-validate-equal/lib/ng-validate-equal.module.ts","ng:/ng-validate-equal/public-api.ts","ng:/ng-validate-equal/ng-validate-equal.ts"],"names":[],"mappings":"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","sourcesContent":["import { Directive, forwardRef, Attribute, OnDestroy } from '@angular/core';\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n    selector: '[ngValidateEqual]',\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => ValidateEqualDirective), multi: true }\r\n    ]\r\n})\r\nexport class ValidateEqualDirective implements Validator, OnDestroy {\r\n\r\n    private valueChangesSub: Subscription;\r\n\r\n    constructor(@Attribute('ngValidateEqual') public otherControl: string) {\r\n\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.valueChangesSub) {\r\n            this.valueChangesSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    validate(selfControl: AbstractControl): { [key: string]: any } {\r\n\r\n        const selfControlValue = selfControl.value;\r\n        const otherControl = selfControl.root.get(this.otherControl);\r\n\r\n        if (this.valueChangesSub) {\r\n            this.valueChangesSub.unsubscribe();\r\n        }\r\n\r\n        // this code works when user types in other control putting the error in self control\r\n        this.valueChangesSub = otherControl.valueChanges.subscribe(\r\n            otherControlValue => {\r\n                if (!this.isEqual(selfControlValue, otherControlValue) && (selfControl.touched || selfControl.dirty)) {\r\n                    selfControl.setErrors(\r\n                        {\r\n                            notEqual: true\r\n                        }\r\n                    );\r\n                } else {\r\n                    if (selfControl.hasError('notEqual')) {\r\n                        delete selfControl.errors['notEqual'];\r\n                        if (!Object.keys(selfControl.errors).length) { selfControl.setErrors(null); }\r\n                    }\r\n                }\r\n            }\r\n        );\r\n\r\n        // this code works when the user types in self control putting the error in self control\r\n        if (!this.isEqual(selfControlValue, otherControl.value) && (selfControl.touched || selfControl.dirty)) {\r\n            return {\r\n                notEqual: true\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private isEqual(val1, val2) {\r\n        val1 = this.unifyEmptyStrings(val1);\r\n        val2 = this.unifyEmptyStrings(val2);\r\n\r\n        return val1 === val2;\r\n    }\r\n\r\n    private unifyEmptyStrings(val) {\r\n        const isDefined = this.isDefined;\r\n        if (val === null || !isDefined(val)) {\r\n            val = '';\r\n        }\r\n        return val;\r\n    }\r\n\r\n    private isDefined(value) {\r\n        const defaultUndefined = void (0);\r\n        return value !== defaultUndefined;\r\n    }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { ValidateEqualDirective } from './ng-validate-equal.directive';\n\n\n\n@NgModule({\n  declarations: [ValidateEqualDirective],\n  imports: [],\n  exports: [ValidateEqualDirective]\n})\nexport class ValidateEqualModule { }\n","/*\n * Public API Surface of ng-validate-equal\n */\n\nexport * from './lib/ng-validate-equal.directive';\nexport * from './lib/ng-validate-equal.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}